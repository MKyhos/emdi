% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step.fh.R
\name{step.fh}
\alias{step.fh}
\title{Step function}
\usage{
step.fh(
  object,
  scope,
  criteria = "AIC",
  direction = c("both", "backward", "forward"),
  trace = 1,
  keep = NULL,
  steps = 1000
)
}
\arguments{
\item{object}{an object of type "fh" that contains the chosen information 
criteria.}

\item{scope}{formula or a list including two formulas (\code{lower} and 
\code{upper}) specifying the models considered in the step function.}

\item{criteria}{a character string describing the model selection criterion. 
Criteria that can be chosen are "\code{AIC}", "\code{AICc}", "\code{AICb1}", 
"\code{AICb2}", "\code{BIC}", "\code{KIC}", "\code{KICc}", "\code{KICb1}", 
or "\code{KICb2}". Defaults to "\code{AIC}".}

\item{direction}{a character string describing the direction of stepwise 
algorithm. Directions that can be chosen are "\code{both}", "\code{backward}" 
or "\code{forward}". Defaults to "\code{both}". If no \code{scope} argument is 
provided, the default is "\code{backward}".}

\item{trace}{a number. If positive, information about the single steps is 
provided during the stepwise procedure. Defaults to \code{1}.}

\item{keep}{a filter function whose input is a fitted model object and the 
associated \code{AIC} statistic, and whose output is arbitrary. Typically 
\code{keep} will select a subset of the components of the object and return 
them. The default is not to keep anything.}

\item{steps}{a number determining the maximum number of steps. Defaults to 1000.}
}
\value{
Information about the resulting "best" model due to the chosen 
information criterion: 
\item{\code{call}}{a list containing an image of the function call that
                   produced the object.}
\item{\code{coefficients}}{data frame containing the estimated regression 
coefficients, the standard errors and the \code{t}- and \code{p}-values of 
the explanatory variables.}
}
\description{
This function selects a model by different criteria in a stepwise algorithm.
}
